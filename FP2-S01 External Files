# game_data.py

# This program demonstrates saving and loading game data using external text files.
# It uses 'high_scores.txt' to save and load player high scores and 'inventory.txt' 
# to manage player inventory items.

def save_high_scores(high_scores):
    """Save high scores to an external file."""
    with open('high_scores.txt', 'w') as file:
        for score in high_scores:
            file.write(f"{score}\n")  # Write each score on a new line

def load_high_scores():
    """Load high scores from an external file."""
    try:
        with open('high_scores.txt', 'r') as file:
            return [int(line.strip()) for line in file.readlines()]  # Read each line as an integer
    except FileNotFoundError:
        return []  # Return an empty list if the file does not exist

def save_inventory(inventory):
    """Save inventory items to an external file."""
    with open('inventory.txt', 'w') as file:
        for item in inventory:
            file.write(f"{item}\n")  # Write each item on a new line

def load_inventory():
    """Load inventory items from an external file."""
    try:
        with open('inventory.txt', 'r') as file:
            return [line.strip() for line in file.readlines()]  # Read each line as a string
    except FileNotFoundError:
        return []  # Return an empty list if the file does not exist

# Example usage
if __name__ == "__main__":
    # Example high scores and inventory
    high_scores = [100, 200, 300]
    inventory = ["sword", "shield", "health potion"]

    # Save high scores and inventory to files
    save_high_scores(high_scores)
    save_inventory(inventory)

    # Load high scores and inventory from files
    loaded_high_scores = load_high_scores()
    loaded_inventory = load_inventory()

    print("Loaded High Scores:", loaded_high_scores)
    print("Loaded Inventory:", loaded_inventory)

